// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using asdasdasdasd;
//
//    var skin = Skin.FromJson(jsonString);

namespace SteamApiJuttu.Models.TradeUpSpy
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Skin
    {
        [JsonProperty("canBeInput")]
        public bool CanBeInput { get; set; }

        [JsonProperty("canBeOutput")]
        public bool CanBeOutput { get; set; }

        [JsonProperty("canBeStatTrak")]
        public bool CanBeStatTrak { get; set; }

        [JsonProperty("collection")]
        public Collection Collection { get; set; }

        [JsonProperty("idr")]
        public long Idr { get; set; }

        [JsonProperty("ids")]
        public long Ids { get; set; }



        [JsonProperty("inspectFN")]
        public string InspectFn { get; set; }

        [JsonProperty("inspectMW")]
        public string InspectMw { get; set; }

        [JsonProperty("maxFloat")]
        public double MaxFloat { get; set; }

        [JsonProperty("minFloat")]
        public double MinFloat { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }


        [JsonProperty("outputPerformanceStats")]
        public OutputPerformanceStats OutputPerformanceStats { get; set; }

        [JsonProperty("priceBSNST")]
        public double PriceBsnst { get; set; }

        [JsonProperty("priceBSST")]
        public double PriceBsst { get; set; }

        [JsonProperty("priceFNNST")]
        public double PriceFnnst { get; set; }

        [JsonProperty("priceFNST")]
        public double PriceFnst { get; set; }

        [JsonProperty("priceFTNST")]
        public double PriceFtnst { get; set; }

        [JsonProperty("priceFTST")]
        public double PriceFtst { get; set; }

        [JsonProperty("priceMWNST")]
        public double PriceMwnst { get; set; }

        [JsonProperty("priceMWST")]
        public double PriceMwst { get; set; }

        [JsonProperty("priceWWNST")]
        public double PriceWwnst { get; set; }

        [JsonProperty("priceWWST")]
        public double PriceWwst { get; set; }

        [JsonProperty("rarityCode")]
        public string RarityCode { get; set; }


        [JsonProperty("skinSnipeId")]
        public long SkinSnipeId { get; set; }

        [JsonProperty("urlImageSteam")]
        public Uri UrlImageSteam { get; set; }

        [JsonProperty("vId")]
        public long VId { get; set; }
    }

    public partial class Collection
    {
        [JsonProperty("iconURL")]
        public Uri IconUrl { get; set; }

        [JsonProperty("idc")]
        public long Idc { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("price")]
        public long Price { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("createTime", NullValueHandling = NullValueHandling.Ignore)]
        public string CreateTime { get; set; }
    }


    public partial class OutputPerformanceStats
    {
        [JsonProperty("statsCost")]
        public double StatsCost { get; set; }

        [JsonProperty("statsFloat")]
        public double StatsFloat { get; set; }

        [JsonProperty("statsPopularity")]
        public long StatsPopularity { get; set; }

        [JsonProperty("statsProfitability")]
        public double StatsProfitability { get; set; }

        [JsonProperty("statsReturn")]
        public double StatsReturn { get; set; }

        [JsonProperty("statsUsed")]
        public long StatsUsed { get; set; }
    }

    public partial class Skin
    {
        public static Skin FromJson(string json) => JsonConvert.DeserializeObject<Skin>(json, TradeUpSpy.Converter.Settings);
    }

}
